head(mtcars)
bad <- kmeans(mtcars, centers=2)
plot(mtcars$mpg,mtcars$hp,col=bad$clustar,pch=16,=2,xlab="",ylab="")
library(

cars_norm <- scale(mtcars)
d <-diet(cars_norm, method="euclidean")
he <- helust(d, method="complete)
plot(he)
cutree(he,3)

pairs(iris(1:4), main="Iris Data(red=setasa, green=vers(color,blue=virgin

data(iris)
summary(iris)

x=iris(,-5)
y=iris$Species

class(fier<-na(vallayes(iris(,1:4), iris(,5))
table(predict(class(fier, iris(,-5), iris(,5))

model= train(x,y,'nb'trControl=trainContro(method='cv',number=10))

predict(model$finalModel,x)$class

table(predict(model$finalModel,x)$class,y)

install.packages('ElemStatLearn')
library('ElemStatlearn')
sub = sample(nrow(spam), floor(nrow(spam)*0.9))
train = spam[sub,]
test = spam[-sub,]

xTrain = train[,-58]
yTrain = train$spam

xTest = test[,-58]
yTest=test$spam

model = train(xTrain,yTrain,'nb',trContrl=trainControl(method='cv', number=10))

prop.table(table(predict(model$finalModel,xTest)$class,yTest))


# Assignment3 Example 1
ye.model <- lm(income~education, date=sls)
sls$pred <- predict(ye.model, sls)
points(sls$education, sls$pred, col="blue", pch=16)

# Assignment3 Example 2
newsls <- data.frame(education = seq(1,25,0.5))
newsls$pred <- predict(ye.model, newsls)
points(newsls$education, newsls$pred, col="green")
points(newsls$education, newsls$pred, col="green", pch=3)

# My Assignment
W <- read.csv("C:/Users/À¯³ª/Desktop/Welfare.csv")
W 
P <- lm(W$Transportation~W$Park, data=W)
W$pred <- predict(P, W)
W$pred
plot(W$Park, W$Transportation)
abline(P)
points(W$Park, W$pred, col="blue", pch=16)


A <- data.frame(W$Park = seq(0,200,10))
A$pred <- predict(W, A)
plot(W$Tra)
points(A$Park, A$pred, col="green")
points(A$Park, A$pred, col="green", pch=200)
